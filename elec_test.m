if ~exist('udelt')
    udelt = loadMonthlyData('E:\data\udel\output\air\monthly\1900-2014', 'air', 'startYear', 2000, 'endYear', 2014);
    udelt = {flipud(udelt{1}), udelt{2}, udelt{3}};
end

elecUs = [327718	294305	297826	281266	315839	335602	359246	373613	323805	301598	300836	338813	336691	286144	303369	280950	306245	330042	360429	372942	307116	293341	276754	304650	325100	285914	306469	294059	311380	346368	388760	381236	336068	311185	299932	328257	346408	303265	306863	289027	310846	332464	380945	387704	325964	307370	299686	334713	349541	316599	310618	293253	330843	349227	383642	375330	339652	316117	306138	346172	347608	302476	322003	293141	319170	368293	408488	411854	355214	320780	310200	352954	333350.683	311513.776	322760.422	301845.599	334849.719	368924.784	416756.11	414370.605	334705.436	324039.993	311912.979	341184.896	358400.108	329131.318	326068.782	308486.872	337077.406	369027.088	399942.677	427923.77	359235.836	336960.713	318875.047	350675.386	373545.221	329533.386	328971.234	309967.091	330618.639	379358.505	410208.259	395457.48	343227.944	322165.867	313595.687	348264.688	360180.329	305955.52	314024.627	293779.378	317249.445	353833.926	378736.762	387911.189	332059.864	312134.923	300965.602	355981.438	369085.645	325801.288	317818.147	292983.448	333710.539	383454.41	417587.201	414852.879	349115.159	309798.698	307831.601	362895.984	369896.282	318007.518	323992.626	307431.985	331031.926	374678.289	427506.456	414177.96	343125.452	314224.861	308124.52	341201.126	345792.941	314014.005	313267.98	300741.534	343752.866	367928.935	424705.309	404017.194	340722.106	317766.441	311780.899	339922.791	355746.309	316161.11	332691.899	304688.105	330280.021	365204.002	403237.043	393889.997	348069.012	321811.892	321045.051	359578.559	385248.805	329966.704	338521.722	302692.836	330718.682	365685.588	393941.032	393329.851	347308.506	320866.957	324528.981	343955.339];
elecAus = [15947	15941	15920	16370	16362	16376	17060	17050	17039	15848	15848	15849	17160	17154	17124	16910	16901	16922	17306	17292	17279	16751	16715	16734	17353	17339	17288	17575	17557	17590	18241	18219	18199	17440	17383	17418	17579	17571	17529	17486	17474	17503	18428	18407	18386	17481	17428	17455	18601	18586	18528	18515	18495	18529	18979	18953	18927	17743	17679	17710	19389	19374	19308	19288	19268	19312	19599	19569	19541	19165	19088	19129	18578.459	18571.788	18530.348	18513.2	18503.961	18544.798	19563.461	19540.359	19517.577	18805.545	18728.694	18785.081	19090.456	18732.643	18664.434	18544.123	18522.462	18571.165	19548.733	19503.027	19457.758	18350.345	18235.023	18294.588	19590.932	19582.523	19502.949	18649.686	18636.992	18720.444	21181.662	21105.847	18779.099	19109.916	18607.464	19346.843	21052.411	18363.348	18635.918	17841.528	19325.898	19338.068	20380.807	19221.722	18203.779	19611.4	22112.551	20455.353	20739.227	19137.652	19473.694	18089.041	19796.108	20162.666	21142.735	21105.796	19778.19	19057.644	18816.968	19325.286	23481.031	20277.274	19911.147	17890.309	19934.423	20018.199	21013.273	20146.965	18561.292	19020.364	19701.167	19028.444	21776.711	19712.254	19616.871	18322.439	19613.598	20066.623	20732.152	20422.434	18352.433	18961.251	18846.957	20085.478	24110.366	18554.604	19604.488	17696.622	19018.646	19136.571	19871.975	19509.997	17972.396	18539.655	18206.767	19140.914	22180.171	19476.418	19669.218	18538.051	19977.317	19538.12	21118.154	20243.594	18121.551	18760.417	19827.877	20761.348];
elecMex = [15069	14581	16161	15652	17411	16519	17539	17903	16985	16260	15108	15175	15786	14564	16584	16116	17583	17585	18046	18353	16978	16521	15302	15194	16589	14811	16387	16970	18143	18077	18159	18520	17378	17461	15737	15568	16770	15870	18275	17487	19643	18657	18731	18488	16663	16006	14930	15213	16728	15840	17780	16739	18354	18229	18938	19498	18109	18353	16598	16807	17412	16401	18237	18921	20110	20844	20859	20666	19998	19290	17928	17946	18780.885	17603.646	20191.065	19689.276	21694.867	22035.135	22408.539	22239.411	20673.918	20802.297	19067.816	19041.146	19418.351	17667.955	20866.896	19756.892	22213.197	22484.692	22656.996	22997.503	21532.13	21687.747	19767.292	19631.348	20385.407	19805.426	20859.928	21907.995	23411.024	23519.758	23084.68	23339.095	21375.542	21391.148	19332.699	18939.3	19034.428	17775.224	20526.518	20430.329	22385.19	22773.661	24235.194	24385.474	22269.122	22219.452	19737.122	20071.287	19971.663	17986.721	21065.875	21528.871	24030.123	24527.686	23726.535	24571.172	22895.346	22086.89	20398.502	20595.617	21189.619	19679.088	23173.424	22795.124	25058.785	24910.046	25718.794	26569.507	24501.79	22932.886	21198.135	21670.801	21984.791	20311.119	23091.27	22662.637	26116.505	26428.837	26016.786	27065.229	24931.239	23859.189	21052.734	21945.662	22273.948	20923.039	22821.424	24311.955	25985.586	26342.866	26224.854	27146.341	24349.455	23998.206	21429.395	21252.931	21630.026	20727.864	23916.261	24017.767	25745.806	26446.828	26971.939	27215.941	24883.677	24813.788	21420.089	21731.013];

latUs = [25 48];
lonUs = [-124 -65]+360;

latAus = [-39 -12];
lonAus = [113 153];

latMex = [14 31];
lonMex = [-116 -87]+360;

[li, loi] = latLonIndexRange(udelt, latMex, lonMex);
elecBase = elecMex';

smoothing = 5*12;

elec = elecBase - smooth(elecBase, smoothing);
elec = reshape(elec, [12, 15]);

t = squeeze(nanmean(nanmean(udelt{3}(li,loi, :, :), 2), 1));
t = permute(t, [2, 1]);
t = reshape(t, [numel(t), 1]);
t = t - smooth(t, smoothing);
t = reshape(t, [12, 15]);

eJJA = elec([6 7 8],:);
eJJA = reshape(eJJA, [3*15, 1]);

tJJA = t([6 7 8], :);
tJJA = reshape(tJJA, [3*15, 1]);

corr(tJJA,eJJA)
fJJA = fit(tJJA,eJJA,'poly1')
fJJA_ci = confint(fJJA);

eSON = elec([9 10 11],:);
eSON = reshape(eSON, [3*15, 1]);

tSON = t([9 10 11], :);
tSON = reshape(tSON, [3*15, 1]);

corr(tSON,eSON)
fSON = fit(tSON,eSON,'poly1')
fSON_ci = confint(fSON);

eDJF = elec([12 1 2],:);
eDJF = reshape(eDJF, [3*15, 1]);

tDJF = t([12 1 2], :);
tDJF = reshape(tDJF, [3*15, 1]);

corr(tDJF,eDJF)
fDJF = fit(tDJF,eDJF,'poly1')
fDJF_ci = confint(fDJF);

eMAM = elec([3 4 5],:);
eMAM = reshape(eMAM, [3*15, 1]);

tMAM = t([3 4 5], :);
tMAM = reshape(tMAM, [3*15, 1]);

corr(tMAM,eMAM)
fMAM = fit(tMAM,eMAM,'poly1')
fMAM_ci = confint(fMAM);


chgAnn = ((fDJF(1)-fDJF(0))+(fJJA(1)-fJJA(0))+(fSON(1)-fSON(0))+(fMAM(1)-fMAM(0))) / nanmean(nanmean(elecBase)) * 100
chgJJA = (fJJA(1)-fJJA(0)) / nanmean(nanmean(elecBase([6 7 8], :))) * 100
chgSON = (fSON(1)-fSON(0)) / nanmean(nanmean(elecBase([9 10 11], :))) * 100
chgDJF = (fDJF(1)-fDJF(0)) / nanmean(nanmean(elecBase([12 1 2], :))) * 100
chgMAM = (fMAM(1)-fMAM(0)) / nanmean(nanmean(elecBase([3 4 5], :))) * 100

figure('Color', [1,1,1]);
hold on;
axis square;
grid on;
box on;

colorHd = [216, 66, 19]./255.0;

b = bar(1, chgJJA, .5);
set(b, 'facecolor', colorHd);
if sign(fJJA_ci(1,1)) == sign(fJJA_ci(2,1))
    set(b, 'facecolor', colorHd, 'edgecolor', 'k', 'linewidth', 5);
end

b = bar(2, chgSON, .5);
set(b, 'facecolor', colorHd);
if sign(fSON_ci(1,1)) == sign(fSON_ci(2,1))
    set(b, 'facecolor', colorHd, 'edgecolor', 'k', 'linewidth', 5);
end

b = bar(3, chgDJF, .5);
set(b, 'facecolor', colorHd);
if sign(fDJF_ci(1,1)) == sign(fDJF_ci(2,1))
    set(b, 'facecolor', colorHd, 'edgecolor', 'k', 'linewidth', 5);
end

b = bar(4, chgMAM, .5);
set(b, 'facecolor', colorHd);
if sign(fMAM_ci(1,1)) == sign(fMAM_ci(2,1))
    set(b, 'facecolor', colorHd, 'edgecolor', 'k', 'linewidth', 5);
end


title('National electricity use - Mex');
set(gca, 'XTick', [1 2 3 4], 'XTickLabels', {'JJA', 'SON', 'DJF', 'MAM'});
ylabel(['% change per 1' char(176) 'C warming']);
ylim([-1 4]);
set(gca, 'fontsize', 36);
set(gcf, 'Position', get(0,'Screensize'));
export_fig(['elec-mex.eps']);
close all;